webpackJsonp([6],[function(e,t,r){function o(){return new i({before:function(){m.clearColor(.9,.9,.9,1),m.clear(m.COLOR_BUFFER_BIT|m.DEPTH_BUFFER_BIT)},getUniforms:function(){return{camera:d.computeMatrix(),texture:this.texture.getTexture().texture}},factory:function(){this.texture||(this.texture=new u(l.screen.gl,v));var e=new s(function(){return"  gl_Position = camera * position; \n  f_texCoord = texCoord; \n"},function(){return"  float txWidth  = 256.0;                                  \n  float txHeight = 256.0;                                  \n  vec2 clamped = vec2(                                     \n     (float(int(f_texCoord.x * (txWidth - 1.0) )))/(txWidth - 1.0),  \n     (float(int(f_texCoord.y * (txHeight - 1.0))))/(txHeight - 1.0)  \n  );                                                       \n  gl_FragColor = texture2D(texture, clamped);              \n   if (gl_FragColor.a < 0.999)                             \n     discard;                                              \n"});e.fragment_uniforms.texture="sampler2D",e.attributes.position="vec4",e.attributes.texCoord="vec2",e.varyings.f_texCoord="vec2",e.vertex_uniforms.camera="mat4";var t=new c(this,e,100);return t.addAttribute("position",4,"Float32Array",function(e,t){return t.vertices[e]}),t.addAttribute("texCoord",2,"Float32Array",function(e,t){return[[0,0],[0,1],[1,0],[1,1]][e]}),t.textureData={texture:this.texture.getTexture()},t}})}function n(){return new i({getUniforms:function(){return{camera:d.computeMatrix(),aspect:d.getAspect(),texture:this.texture.getTexture().texture}},factory:function(){this.texture||(this.texture=new u(l.screen.gl,v));var e=new s(function(){return" vec4 pos = camera * position; \n gl_Position = pos + offset * aspect; \n f_texCoord = texCoord; \n"},function(){return"  float txWidth  = 256.0;                                  \n  float txHeight = 256.0;                                  \n  vec2 clamped = vec2(                                     \n     (float(int(f_texCoord.x * (txWidth - 1.0) )))/(txWidth - 1.0),  \n     (float(int(f_texCoord.y * (txHeight - 1.0))))/(txHeight - 1.0)  \n  );                                                       \n  gl_FragColor = texture2D(texture, clamped);              \n   if (gl_FragColor.a < 0.999)                             \n     discard;                                              \n"});e.fragment_uniforms.texture="sampler2D",e.attributes.position="vec4",e.attributes.texCoord="vec2",e.varyings.f_texCoord="vec2",e.vertex_uniforms.camera="mat4",e.vertex_uniforms.aspect="vec4",e.attributes.offset="vec4";var t=new c(this,e,100);return t.addAttribute("position",4,"Float32Array",function(e,t){return t.vertices}),t.addAttribute("offset",4,"Float32Array",function(e,t){var r=t.width,o=t.height;return[[-r,-o,0,0],[-r,o,0,0],[r,-o,0,0],[r,o,0,0]][e]}),t.addAttribute("texCoord",2,"Float32Array",function(e,t){return[[0,0],[0,1],[1,0],[1,1]][e]}),t.textureData={texture:this.texture.getTexture()},t}})}var a=r(1),i=a.Renderable,c=a.Model,s=(a.shaders,a.Shader),u=a.Texture,l=new a({canvas:document.getElementById("canvas"),frameRate:{element:document.getElementById("framerate")},wasd:{document:document,delta:.05,theta:-Math.PI/120}}),d=l.camera,f=l.screen,m=l.screen.gl,v=document.createElement("img"),h=function(e,t,r,o){return[[e-o,t-o,r,1],[e-o,t+o,r,1],[e+o,t-o,r,1],[e+o,t+o,r,1]]},_=function(e,t,r){return[e,t,r,1]},p=o();f.addRenderable(p);var x=n();f.addRenderable(x);var g=!1,b=function(){g||(g=!0,p.add({color:1,allocations:{},vertices:h(.25,0,.7,.05)}),p.add({color:2,allocations:{},vertices:h(0,.25,.7,.05)}),p.add({color:3,allocations:{},vertices:h(0,0,.9,.05)}),x.add({color:4,allocations:{},vertices:_(0,0,.7,.05),width:.04,height:.04}))};v.addEventListener("load",function(){console.log("img loaded"),b(),f.beginFrameRendering(!1)}),v.setAttribute("src","../img/img.png")}]);
//# sourceMappingURL=bundle.js.map