webpackJsonp([1],[function(e,r,t){function n(){return new d({renderOrder:10,getUniforms:function(){return{camera:F.computeMatrix()}},factory:function(){var e=100,r=new _.Float(e,4),t=new E(function(){return"  gl_Position = camera * position; \n  f_color = colors[int(color)]; \n"},function(){return"  gl_FragColor = f_color ;\n"});t.attributes.position="vec4",t.attributes.color="float",t.varyings.f_color="vec4",t.vertex_uniforms.camera="mat4",t.vertex_uniforms["colors["+e+"]"]="vec4";var n=new f(this,t,100);return n.addAttribute("position",4,"Float32Array",function(e,r){return r.vertices[e]}),n.addAttribute("color",1,"Float32Array",function(e,t){return[r.add(t.color,t,function(){return t.color.color})]}),n.uniforms.colors=r.buffer,n}})}function a(e){this.framebuffers=e,this.cameras=[],this.camera=null;for(var r=0;1>r;++r){var t;this.cameras.push(t=new h(e.size,e.size,.1,4096)),t.setFOV(90,!0)}this.camera=t,this.camera.rotateBy(0,Math.PI,0),v.call(this)}function i(e,r){[T.TEXTURE_CUBE_MAP_POSITIVE_X,T.TEXTURE_CUBE_MAP_NEGATIVE_X,T.TEXTURE_CUBE_MAP_POSITIVE_Y,T.TEXTURE_CUBE_MAP_NEGATIVE_Y,T.TEXTURE_CUBE_MAP_POSITIVE_Z,T.TEXTURE_CUBE_MAP_NEGATIVE_Z];this.size=e,this.depth=r;var t={texture:s.createTexture(T,{target:T.TEXTURE_2D,width:this.size,height:this.size,min:T.LINEAR,mag:T.LINEAR,format:T.RGBA,type:T.UNSIGNED_BYTE,wrapS:T.CLAMP_TO_EDGE,wrapT:T.CLAMP_TO_EDGE})};if(this.depth){var n=T.createRenderbuffer();T.bindRenderbuffer(T.RENDERBUFFER,n),T.renderbufferStorage(T.RENDERBUFFER,T.DEPTH_COMPONENT16,this.size,this.size)}this.framebuffers=[];for(var a=0;1>a;++a){var i=T.createFramebuffer();T.bindFramebuffer(T.FRAMEBUFFER,i),T.framebufferTexture2D(T.FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,t.texture,0),this.depth&&T.framebufferRenderbuffer(T.FRAMEBUFFER,T.DEPTH_ATTACHMENT,T.RENDERBUFFER,n);var o=T.checkFramebufferStatus(T.FRAMEBUFFER);if(o!=T.FRAMEBUFFER_COMPLETE)throw"gl.checkFramebufferStatus() returned "+WebGLDebugUtils.glEnumToString(o);this.framebuffers.push(i)}T.bindRenderbuffer(T.RENDERBUFFER,null),this.texture=t}function o(e,r){console.log(Math.floor(e),Math.floor(r))}var s=t(7),c=t(7).m4,u=t(1),d=u.Renderable,f=u.Model,l=u.Plate,E=(u.shaders,u.Shader),_=u.Allocation,m=t(3),v=u.RenderSet,h=u.camera.BasicCamera,b=new u({canvas:document.getElementById("canvas"),frameRate:{element:document.getElementById("framerate")},wasd:{document:document,delta:.05,theta:-Math.PI/120}}),F=b.camera,p=b.screen,T=b.screen.gl,R=function(e,r,t,n){return[[e-n,r-n,t,1],[e-n,r+n,t,1],[e+n,r-n,t,1],[e+n,r+n,t,1]]},A={id:"red",color:[1,0,0,1]},g={id:"green",color:[0,1,0,1]},B={id:"blue",color:[0,0,1,1]},U={id:"white",color:[1,1,1,1]},y=n();p.addRenderable(y),y.add({color:A,allocations:{},vertices:R(.25,0,.7,.05)}),y.add({color:g,allocations:{},vertices:R(0,.25,.7,.05)}),y.add({color:B,allocations:{},vertices:R(0,0,.9,.05)}),y.add({color:U,allocations:{},vertices:R(0,0,.7,.01)}),m.inherits(a,v),a.prototype.render=function(e){for(var r=0;1>r;++r)this.framebuffers.bind(r),this.camera=this.cameras[r],v.prototype.render.call(this,e);this.framebuffers.unbind()},i.prototype.bind=function(e){T.bindFramebuffer(T.FRAMEBUFFER,this.framebuffers[e]),T.viewport(0,0,this.size,this.size)},i.prototype.unbind=function(){T.bindFramebuffer(T.FRAMEBUFFER,null),T.viewport(0,0,T.drawingBufferWidth||T.canvas.width,T.drawingBufferHeight||T.canvas.height)};var w=new i(1024,!0);w.unbind(),function(){var e=new a(w),r=new E(function(){return"  gl_Position = position; \n  v_position  = inverse_camera * position; \n"},function(){return"  gl_FragColor = vec4(                                               \n   (v_position.x + 1.0) / 2.0,                                       \n   (v_position.y + 1.0) / 2.0,                                       \n   (v_position.z + 1.0) / 2.0,                                       \n   1.0);                                                             \n"});r.attributes.position="vec4",r.vertex_uniforms.inverse_camera="mat4",r.varyings.v_position="vec4";var t=new l(r);t.add({z:-.5});var n={},i=c.identity(new Float32Array(16)),o=c.identity(new Float32Array(16)),s=c.identity(new Float32Array(16));e.addRenderable({before:function(){T.clearColor(0,0,0,0),T.clear(T.COLOR_BUFFER_BIT|T.DEPTH_BUFFER_BIT)},renderOrder:0}),e.addRenderable({renderOrder:11,render:function(r){r.disable(r.DEPTH_TEST),r.enable(r.BLEND),r.blendEquationSeparate(r.FUNC_ADD,r.FUNC_ADD),r.blendFuncSeparate(r.ONE_MINUS_DST_ALPHA,r.DST_ALPHA,r.ONE,r.ONE),e.camera.computeMatrix(),c.inverse(e.camera.perspective,i),c.inverse(e.camera.skyorientation,o),c.multiply(i,o,s),n.inverse_camera=s;var a=t.getGeometry(r);t.drawPrep(a,n),a.draw(),r.disable(r.BLEND),r.enable(r.DEPTH_TEST)}}),e.addRenderable(y),p.addRenderable({before:function(){T.clearColor(0,0,0,0),T.clear(T.COLOR_BUFFER_BIT|T.DEPTH_BUFFER_BIT)},renderOrder:0}),p.addRenderable({renderOrder:20,render:function(r){e.render(r)}})}(),function(){var e=new E(function(){return"  v_pos       = position; \n  gl_Position = camera * vec4(position.x / 4.0, position.y / 4.0, 1.5, 1.0); \n"},function(){return"  gl_FragColor = texture2D(                            \n      texture,                                         \n      vec2(v_pos.x / 2.0 + 0.5, v_pos.y / 2.0 + 0.5)); \n"});e.attributes.position="vec4",e.fragment_uniforms.texture="sampler2D",e.vertex_uniforms.camera="mat4",e.varyings.v_pos="vec4";var r=new l(e);r.textureData={texture:w.texture},r.add({z:1});var t={};c.identity(new Float32Array(16));p.addRenderable({renderOrder:30,render:function(e){e.disable(e.DEPTH_TEST),e.enable(e.BLEND),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_ALPHA,e.DST_ALPHA,e.ONE,e.ONE),F.computeMatrix(),t.camera=F.matrix,t.texture=r.textureData.texture.texture;var n=r.getGeometry(e);r.drawPrep(n,t),n.draw(),e.disable(e.BLEND),e.enable(e.DEPTH_TEST)}})}(),p.beginFrameRendering(!1),document.getElementById("canvas").addEventListener("click",function(e){var r=document.getElementById("canvas").getBoundingClientRect();o((e.clientX-r.left)/r.width*F.frameWidth,(e.clientY-r.top)/r.height*F.frameHeight)})}]);
//# sourceMappingURL=bundle.js.map