webpackJsonp([1],[function(e,r,t){function n(){return new l({before:function(){R.clearColor(0,0,0,0),R.clear(R.COLOR_BUFFER_BIT|R.DEPTH_BUFFER_BIT)},renderOrder:1,getUniforms:function(e){return console.log(e),{camera:e==p?_.computeMatrix():e.camera.computeMatrix()}},factory:function(){var e=100,r=new v.Float(e,4),t=new m(function(){return"  gl_Position = camera * position; \n  f_color = colors[int(color)]; \n"},function(){return"  gl_FragColor = f_color ;\n"});t.attributes.position="vec4",t.attributes.color="float",t.varyings.f_color="vec4",t.vertex_uniforms.camera="mat4",t.vertex_uniforms["colors["+e+"]"]="vec4";var n=new d(this,t,100);return n.addAttribute("position",4,"Float32Array",function(e,r){return r.vertices[e]}),n.addAttribute("color",1,"Float32Array",function(e,t){return[r.add(t.color,t,function(){return t.color.color})]}),n.uniforms.colors=r.buffer,n}})}function o(e){this.framebuffers=e,this.cameras=[],this.camera=null;for(var r=0;1>r;++r){var t;this.cameras.push(t=new b(e.size,e.size,.1,4096)),t.setFOV(90,!0)}this.cameras[0].rotateBy(0,Math.PI,0),h.call(this)}function a(e,r){this.size=e,this.depth=r;var t={texture:c.createTexture(R,{target:R.TEXTURE_2D,width:this.size,height:this.size,min:R.LINEAR,mag:R.LINEAR,format:R.RGBA,type:R.UNSIGNED_BYTE,wrapS:R.CLAMP_TO_EDGE,wrapT:R.CLAMP_TO_EDGE})};if(this.depth){var n=R.createRenderbuffer();R.bindRenderbuffer(R.RENDERBUFFER,n),R.renderbufferStorage(R.RENDERBUFFER,R.DEPTH_COMPONENT16,this.size,this.size)}this.framebuffers=[];for(var o=0;1>o;++o){var a=R.createFramebuffer();R.bindFramebuffer(R.FRAMEBUFFER,a),R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,t.texture,0),this.depth&&R.framebufferRenderbuffer(R.FRAMEBUFFER,R.DEPTH_ATTACHMENT,R.RENDERBUFFER,n);var i=R.checkFramebufferStatus(R.FRAMEBUFFER);if(i!=R.FRAMEBUFFER_COMPLETE)throw"gl.checkFramebufferStatus() returned "+i;this.framebuffers.push(a)}R.bindRenderbuffer(R.RENDERBUFFER,null),this.texture=t}function i(e,r){console.log(Math.floor(e),Math.floor(r))}var c=t(7),s=t(7).m4,u=t(1),l=u.Renderable,d=u.Model,f=u.Plate,m=(u.shaders,u.Shader),v=u.Allocation,E=t(3),h=u.RenderSet,b=u.camera.BasicCamera,F=new u({canvas:document.getElementById("canvas"),frameRate:{element:document.getElementById("framerate")},wasd:{document:document,delta:.05,theta:-Math.PI/120}}),_=F.camera,p=F.screen,R=F.screen.gl,g=function(e,r,t,n){return[[e-n,r-n,t,1],[e-n,r+n,t,1],[e+n,r-n,t,1],[e+n,r+n,t,1]]},w={id:"red",color:[1,0,0,1]},A={id:"green",color:[0,1,0,1]},y={id:"blue",color:[0,0,1,1]},T={id:"white",color:[1,1,1,1]},B=n();p.addRenderable(B),B.add({color:w,allocations:{},vertices:g(.25,0,.7,.05)}),B.add({color:A,allocations:{},vertices:g(0,.25,.7,.05)}),B.add({color:y,allocations:{},vertices:g(0,0,.9,.05)}),B.add({color:T,allocations:{},vertices:g(0,0,.7,.01)}),E.inherits(o,h),o.prototype.render=function(e){for(var r=0;1>r;++r)this.framebuffers.bind(r),this.camera=this.cameras[r],h.prototype.render.call(this,e);this.framebuffers.unbind()},a.prototype.bind=function(e){R.bindFramebuffer(R.FRAMEBUFFER,this.framebuffers[e]),R.viewport(0,0,this.size,this.size)},a.prototype.unbind=function(){R.bindFramebuffer(R.FRAMEBUFFER,null),R.viewport(0,0,R.drawingBufferWidth||R.canvas.width,R.drawingBufferHeight||R.canvas.height)};var x=new a(1024,!0);x.unbind(),function(){var e=new o(x),r=new m(function(){return"  gl_Position = position; \n  v_position  = inverse_camera * position; \n"},function(){return"  gl_FragColor = vec4(                                               \n   (v_position.x + 1.0) / 2.0,                                       \n   (v_position.y + 1.0) / 2.0,                                       \n   (v_position.z + 1.0) / 2.0,                                       \n   1.0);                                                             \n"});r.attributes.position="vec4",r.vertex_uniforms.inverse_camera="mat4",r.varyings.v_position="vec4";var t=new f(r);t.add({z:-.5});s.identity(new Float32Array(16)),s.identity(new Float32Array(16)),s.identity(new Float32Array(16));e.addRenderable(B),p.addRenderable({renderOrder:2,render:function(r){e.render(r)}})}(),function(){var e=new m(function(){return"  v_pos       = camera * position; \n  gl_Position = vec4(position.x, position.y, 0.5, 1.0); \n"},function(){return"  gl_FragColor = texture2D(                              \n      texture,                                           \n      vec2(v_pos.x, v_pos.y));                           \n"});e.attributes.position="vec4",e.fragment_uniforms.texture="sampler2D",e.vertex_uniforms.camera="mat4",e.varyings.v_pos="vec4";var r=new f(e);r.textureData={texture:x.texture},r.add({z:1});var t={},n=s.identity(new Float32Array(16));p.addRenderable({renderOrder:3,render:function(e){e.disable(e.DEPTH_TEST),e.enable(e.BLEND),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_ALPHA,e.DST_ALPHA,e.ONE,e.ONE),_.computeMatrix(),s.inverse(_.skymatrix,n),t.camera=n,t.texture=r.textureData.texture.texture;var o=r.getGeometry(e);r.drawPrep(o,t),o.draw(),e.disable(e.BLEND),e.enable(e.DEPTH_TEST)}})}(),p.beginFrameRendering(!1),document.getElementById("canvas").addEventListener("click",function(e){var r=document.getElementById("canvas").getBoundingClientRect();i((e.clientX-r.left)/r.width*_.frameWidth,(e.clientY-r.top)/r.height*_.frameHeight)})}]);
//# sourceMappingURL=bundle.js.map