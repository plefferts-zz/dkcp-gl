webpackJsonp([1],[function(t,e,r){function n(){return new c({before:function(){A.clearColor(0,0,0,0),A.clear(A.COLOR_BUFFER_BIT|A.DEPTH_BUFFER_BIT)},renderOrder:1,getUniforms:function(t){return{camera:t==b?E.computeMatrix():t.camera.computeMatrix()}},factory:function(){var t=100,e=new d.Float(t,4),r=new p(function(){return"  gl_Position = camera * position; \n  f_color = colors[int(color)]; \n"},function(){return"  gl_FragColor = f_color ;\n"});r.attributes.position="vec4",r.attributes.color="float",r.varyings.f_color="vec4",r.vertex_uniforms.camera="mat4",r.vertex_uniforms["colors["+t+"]"]="vec4";var n=new h(this,r,100);return n.addAttribute("position",4,"Float32Array",function(t,e){return e.vertices[t]}),n.addAttribute("color",1,"Float32Array",function(t,r){return[e.add(r.color,r,function(){return r.color.color})]}),n.uniforms.colors=e.buffer,n}})}function i(t){this.framebuffers=t,this.cameras=[],this.camera=null;for(var e=0;1>e;++e){var r;this.cameras.push(r=new y(t.size,t.size,.1,4096)),r.setFOV(90,!0)}this.cameras[0].rotateBy(0,Math.PI,0),v.call(this)}function o(t,e){this.size=t,this.depth=e;var r={texture:s.createTexture(A,{target:A.TEXTURE_2D,width:this.size,height:this.size,min:A.LINEAR,mag:A.LINEAR,format:A.RGBA,type:A.UNSIGNED_BYTE,wrapS:A.CLAMP_TO_EDGE,wrapT:A.CLAMP_TO_EDGE})};if(this.depth){var n=A.createRenderbuffer();A.bindRenderbuffer(A.RENDERBUFFER,n),A.renderbufferStorage(A.RENDERBUFFER,A.DEPTH_COMPONENT16,this.size,this.size)}this.framebuffers=[];for(var i=0;1>i;++i){var o=A.createFramebuffer();A.bindFramebuffer(A.FRAMEBUFFER,o),A.framebufferTexture2D(A.FRAMEBUFFER,A.COLOR_ATTACHMENT0,A.TEXTURE_2D,r.texture,0),this.depth&&A.framebufferRenderbuffer(A.FRAMEBUFFER,A.DEPTH_ATTACHMENT,A.RENDERBUFFER,n);var a=A.checkFramebufferStatus(A.FRAMEBUFFER);if(a!=A.FRAMEBUFFER_COMPLETE)throw"gl.checkFramebufferStatus() returned "+a;this.framebuffers.push(o)}A.bindRenderbuffer(A.RENDERBUFFER,null),this.texture=r}function a(t,e){console.log(Math.floor(t),Math.floor(e))}var s=r(7),u=r(7).m4,f=r(1),c=f.Renderable,h=f.Model,l=f.Plate,p=(f.shaders,f.Shader),d=f.Allocation,m=r(3),v=f.RenderSet,y=f.camera.BasicCamera,g=new f({canvas:document.getElementById("canvas"),frameRate:{element:document.getElementById("framerate")},wasd:{document:document,delta:.05,theta:-Math.PI/120}}),E=g.camera,b=g.screen,A=g.screen.gl,T=function(t,e,r,n){return[[t-n,e-n,r,1],[t-n,e+n,r,1],[t+n,e-n,r,1],[t+n,e+n,r,1]]},x={id:"red",color:[1,0,0,1]},w={id:"green",color:[0,1,0,1]},_={id:"blue",color:[0,0,1,1]},R={id:"white",color:[1,1,1,1]},B=n();b.addRenderable(B),B.add({color:x,allocations:{},vertices:T(.25,0,.7,.05)}),B.add({color:w,allocations:{},vertices:T(0,.25,.7,.05)}),B.add({color:_,allocations:{},vertices:T(0,0,.9,.05)}),B.add({color:R,allocations:{},vertices:T(0,0,.7,.01)}),m.inherits(i,v),i.prototype.render=function(t){for(var e=0;1>e;++e)this.framebuffers.bind(e),this.camera=this.cameras[e],v.prototype.render.call(this,t);this.framebuffers.unbind()},o.prototype.bind=function(t){A.bindFramebuffer(A.FRAMEBUFFER,this.framebuffers[t]),A.viewport(0,0,this.size,this.size)},o.prototype.unbind=function(){A.bindFramebuffer(A.FRAMEBUFFER,null),A.viewport(0,0,A.drawingBufferWidth||A.canvas.width,A.drawingBufferHeight||A.canvas.height)};var M=new o(1024,!0);M.unbind(),function(){var t=new i(M),e=new p(function(){return"  gl_Position = position; \n  v_position  = inverse_camera * position; \n"},function(){return"  gl_FragColor = vec4(                                               \n   (v_position.x + 1.0) / 2.0,                                       \n   (v_position.y + 1.0) / 2.0,                                       \n   (v_position.z + 1.0) / 2.0,                                       \n   1.0);                                                             \n"});e.attributes.position="vec4",e.vertex_uniforms.inverse_camera="mat4",e.varyings.v_position="vec4";var r=new l(e);r.add({z:-.5});u.identity(new Float32Array(16)),u.identity(new Float32Array(16)),u.identity(new Float32Array(16));t.addRenderable(B),b.addRenderable({renderOrder:2,render:function(e){t.render(e)}})}(),function(){var t=new p(function(){return"  v_pos       = camera * position; \n  gl_Position = vec4(position.x, position.y, 0.5, 1.0); \n"},function(){return"  gl_FragColor = texture2D(                              \n      texture,                                           \n      vec2(v_pos.x, v_pos.y));                           \n"});t.attributes.position="vec4",t.fragment_uniforms.texture="sampler2D",t.vertex_uniforms.camera="mat4",t.varyings.v_pos="vec4";var e=new l(t);e.textureData={texture:M.texture},e.add({z:1});var r={},n=u.identity(new Float32Array(16));b.addRenderable({renderOrder:3,render:function(t){t.disable(t.DEPTH_TEST),t.enable(t.BLEND),t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE_MINUS_DST_ALPHA,t.DST_ALPHA,t.ONE,t.ONE),E.computeMatrix(),u.inverse(E.skymatrix,n),r.camera=n,r.texture=e.textureData.texture.texture;var i=e.getGeometry(t);e.drawPrep(i,r),i.draw(),t.disable(t.BLEND),t.enable(t.DEPTH_TEST)}})}(),b.beginFrameRendering(!1),document.getElementById("canvas").addEventListener("click",function(t){var e=document.getElementById("canvas").getBoundingClientRect();a((t.clientX-e.left)/e.width*E.frameWidth,(t.clientY-e.top)/e.height*E.frameHeight)})}]);
//# sourceMappingURL=bundle.js.map