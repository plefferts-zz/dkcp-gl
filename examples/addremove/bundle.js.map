{"version":3,"sources":["webpack:///addremove/bundle.js","webpack:///./examples/addremove/index.js"],"names":["webpackJsonp","module","exports","__webpack_require__","getRenderable","Renderable","getUniforms","camera","computeMatrix","factory","maxColors","colorAllocation","Allocation","Float","shader","Shader","attributes","position","color","varyings","f_color","vertex_uniforms","m","Model","this","addAttribute","i","item","vertices","color_indices","colors","allocations","forEach","push","add","uniforms","buffer","DkcpGl","shaders","main","canvas","document","getElementById","frameRate","element","wasd","delta","theta","Math","PI","screen","square","x","y","z","w","quads","addRenderable","used","setInterval","id","random","length","shift","remove","removeUnused","arguments","callee","beginFrameRendering"],"mappings":"AAAAA,cAAc,IAER,SAASC,EAAQC,EAASC,GCoBhC,QAAAC,KACA,UAAAC,IACAC,YAAA,WACA,OACAC,SAAAC,kBAGAC,QAAA,WAEA,GAAAC,GAAA,IACAC,EAAA,GAAAC,GAAAC,MAAAH,EAAA,GAEAI,EAAA,GAAAC,GAAA,WACA,iFAEO,WACP,sCAEAD,GAAAE,WAAAC,SAAA,OACAH,EAAAE,WAAAE,MAAA,QACAJ,EAAAK,SAAAC,QAAA,OACAN,EAAAO,gBAAAd,OAAA,OACAO,EAAAO,gBAAA,UAAAX,EAAA,WAEA,IAAAY,GAAA,GAAAC,GAAAC,KAAAV,EAAAJ,EAqBA,OApBAY,GAAAG,aAAA,qCAAAC,EAAAC,GACA,MAAAA,GAAAC,SAAAF,KAGAJ,EAAAG,aAAA,kCAAAC,EAAAC,GACA,GAAAE,MACAC,EAAAH,EAAAI,YAAAb,KAQA,OAPAY,GAAAE,QAAA,SAAAd,GACAW,EAAAI,KACAtB,EAAAuB,IAAAhB,EAAAS,EAAA,WACA,MAAAT,cAIAW,IAGAP,EAAAS,YAAAb,MAAAP,EACAW,EAAAa,SAAAL,OAAAnB,EAAAyB,OAEAd,KAnEA,GAAAe,GAAAlC,EAAA,GAEAE,EAAAgC,EAAAhC,WACAkB,EAAAc,EAAAd,MAEAR,GADAsB,EAAAC,QACAD,EAAAtB,QACAH,EAAAyB,EAAAzB,WAEA2B,EAAA,GAAAF,IACAG,OAAAC,SAAAC,eAAA,UACAC,WACAC,QAAAH,SAAAC,eAAA,cAEAG,MACAJ,kBACAK,MAAA,IACAC,OAAAC,KAAAC,GAAA,OAGA1C,EAAAgC,EAAAhC,OACA2C,EAAAX,EAAAW,OAoDAC,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,QACAH,EAAAG,EAAAF,EAAAE,EAAAD,EAAA,IACAF,EAAAG,EAAAF,EAAAE,EAAAD,EAAA,IACAF,EAAAG,EAAAF,EAAAE,EAAAD,EAAA,IACAF,EAAAG,EAAAF,EAAAE,EAAAD,EAAA,KAIAE,EAAApD,GACA8C,GAAAO,cAAAD,EAEA,IAAAE,KACAC,aAAA,WACA,GAAAhC,GAAA6B,EAAAtB,KACAH,aACAb,QAAgB0C,GAAAZ,KAAAa,SAAA3C,OAAA8B,KAAAa,SAAAb,KAAAa,SAAAb,KAAAa,SAAA,MAEhBjC,SAAAuB,EAAA,EAAAH,KAAAa,SAAA,IAAAb,KAAAa,SAAA,WAIA,IADAH,EAAAzB,KAAAN,GACA+B,EAAAI,OAAA,KACA,OAAApC,GAAA,EAAmB,GAAAA,EAAQA,IAC3BC,EAAA+B,EAAAK,QACApC,EAAAqC,QAEAR,GAAAS,eAEA,MAAAC,WAAAC,UACC,IAEDjB,EAAAkB,qBAAA","file":"addremove/bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar DkcpGl            = __webpack_require__(1)\n\t\n\tvar Renderable        = DkcpGl.Renderable\n\tvar Model             = DkcpGl.Model\n\tvar shaders           = DkcpGl.shaders\n\tvar Shader            = DkcpGl.Shader\n\tvar Allocation        = DkcpGl.Allocation\n\t\n\tvar main = new DkcpGl({\n\t  canvas : document.getElementById('canvas'),\n\t  frameRate : {\n\t    element : document.getElementById('framerate')\n\t  },\n\t  wasd : {\n\t    document : document,\n\t    delta : .05,\n\t    theta : -Math.PI / 120\n\t  }\n\t})\n\tvar camera = main.camera;\n\tvar screen = main.screen;\n\t\n\tfunction getRenderable() {\n\t  return new Renderable({\n\t    getUniforms : function () {\n\t      return {\n\t        camera : camera.computeMatrix()\n\t      }\n\t    },\n\t    factory : function () {\n\t      \n\t      var maxColors = 100\n\t      var colorAllocation = new Allocation.Float(maxColors, 4)\n\t\n\t      var shader = new Shader(function () {\n\t        return '  gl_Position = camera * position; \\n' + \n\t               '  f_color = colors[int(color)]; \\n'\n\t      }, function () {\n\t        return '  gl_FragColor = f_color ;\\n'\n\t      })\n\t      shader.attributes.position   = 'vec4';\n\t      shader.attributes.color      = 'float';\n\t      shader.varyings.f_color      = 'vec4';\n\t      shader.vertex_uniforms.camera = 'mat4';\n\t      shader.vertex_uniforms['colors[' + maxColors + ']'] = 'vec4';\n\t\n\t      var m = new Model(this, shader, maxColors)\n\t      m.addAttribute('position', 4, 'Float32Array', function (i, item) {\n\t        return item.vertices[i]\n\t      });\n\t      \n\t      m.addAttribute('color', 1, 'Float32Array', function (i, item) {\n\t        var color_indices = []\n\t        var colors = item.allocations.color\n\t        colors.forEach(function (color) {\n\t          color_indices.push(\n\t            colorAllocation.add(color, item, function () {\n\t              return color.color\n\t            })\n\t          )\n\t        })\n\t        return color_indices\n\t      });\n\t\n\t      m.allocations.color = colorAllocation;\n\t      m.uniforms.colors = colorAllocation.buffer;\n\t\n\t      return m\n\t    }\n\t  })\n\t}\n\t\n\tvar square = function (x, y, z, w) {\n\t  return [\n\t    [x - w,  y - w, z, 1],\n\t    [x - w,  y + w, z, 1],\n\t    [x + w,  y - w, z, 1],\n\t    [x + w,  y + w, z, 1]\n\t  ]\n\t}\n\t\n\tvar quads  = getRenderable()\n\tscreen.addRenderable(quads)\n\t\n\tvar used = []\n\tsetInterval(function () {\n\t  var item = quads.add({\n\t    allocations : {\n\t      color : [{id: Math.random(), color: [Math.random(), Math.random(), Math.random(), 1]}],\n\t    },\n\t    vertices : square(Math.random() * 2 - 1, Math.random() * 2 - 1, .7, .05)\n\t  })\n\t  \n\t  used.push(item)\n\t  if (used.length > 200) {\n\t    for (var i = 0; i < 25; i ++) {\n\t      item = used.shift()\n\t      item.remove()\n\t    }\n\t    quads.removeUnused()\n\t  }\n\t  return arguments.callee\n\t}(), 20)\n\t\n\tscreen.beginFrameRendering(false)\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** addremove/bundle.js\n **/","var DkcpGl            = require('../../src/dkcp-gl')\n\nvar Renderable        = DkcpGl.Renderable\nvar Model             = DkcpGl.Model\nvar shaders           = DkcpGl.shaders\nvar Shader            = DkcpGl.Shader\nvar Allocation        = DkcpGl.Allocation\n\nvar main = new DkcpGl({\n  canvas : document.getElementById('canvas'),\n  frameRate : {\n    element : document.getElementById('framerate')\n  },\n  wasd : {\n    document : document,\n    delta : .05,\n    theta : -Math.PI / 120\n  }\n})\nvar camera = main.camera;\nvar screen = main.screen;\n\nfunction getRenderable() {\n  return new Renderable({\n    getUniforms : function () {\n      return {\n        camera : camera.computeMatrix()\n      }\n    },\n    factory : function () {\n      \n      var maxColors = 100\n      var colorAllocation = new Allocation.Float(maxColors, 4)\n\n      var shader = new Shader(function () {\n        return '  gl_Position = camera * position; \\n' + \n               '  f_color = colors[int(color)]; \\n'\n      }, function () {\n        return '  gl_FragColor = f_color ;\\n'\n      })\n      shader.attributes.position   = 'vec4';\n      shader.attributes.color      = 'float';\n      shader.varyings.f_color      = 'vec4';\n      shader.vertex_uniforms.camera = 'mat4';\n      shader.vertex_uniforms['colors[' + maxColors + ']'] = 'vec4';\n\n      var m = new Model(this, shader, maxColors)\n      m.addAttribute('position', 4, 'Float32Array', function (i, item) {\n        return item.vertices[i]\n      });\n      \n      m.addAttribute('color', 1, 'Float32Array', function (i, item) {\n        var color_indices = []\n        var colors = item.allocations.color\n        colors.forEach(function (color) {\n          color_indices.push(\n            colorAllocation.add(color, item, function () {\n              return color.color\n            })\n          )\n        })\n        return color_indices\n      });\n\n      m.allocations.color = colorAllocation;\n      m.uniforms.colors = colorAllocation.buffer;\n\n      return m\n    }\n  })\n}\n\nvar square = function (x, y, z, w) {\n  return [\n    [x - w,  y - w, z, 1],\n    [x - w,  y + w, z, 1],\n    [x + w,  y - w, z, 1],\n    [x + w,  y + w, z, 1]\n  ]\n}\n\nvar quads  = getRenderable()\nscreen.addRenderable(quads)\n\nvar used = []\nsetInterval(function () {\n  var item = quads.add({\n    allocations : {\n      color : [{id: Math.random(), color: [Math.random(), Math.random(), Math.random(), 1]}],\n    },\n    vertices : square(Math.random() * 2 - 1, Math.random() * 2 - 1, .7, .05)\n  })\n  \n  used.push(item)\n  if (used.length > 200) {\n    for (var i = 0; i < 25; i ++) {\n      item = used.shift()\n      item.remove()\n    }\n    quads.removeUnused()\n  }\n  return arguments.callee\n}(), 20)\n\nscreen.beginFrameRendering(false)\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./examples/addremove/index.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}